{"version":3,"sources":["components/Title/Title.styles.js","components/Title/Title.jsx","components/Control/Control.styles.js","components/Control/Control.jsx","components/List/List.styles.js","components/Footer/Footer.styles.js","components/Footer/Footer.jsx","components/List/List.jsx","App.js","index.js"],"names":["StyledTitle","styled","h1","Title","StyledControl","div","Control","todo","setTodo","useState","value","setValue","saveTodo","id","nanoid","content","isActive","date","Date","now","toLocaleString","placeholder","onChange","e","target","onKeyDown","key","handleSubmit","onClick","BigWrapper","TaskContainer","props","status","TasksWrapper","TasksContent","StyledData","ButtonsWrapper","StyledFooter","Footer","amount","List","edit","setEdit","filter","setFilter","useEffect","filterTodo","newTodo","item","saveEditedTodo","map","deleteTodo","statusTodo","length","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e48069d.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledTitle = styled.h1`\n  font-family: \"Roboto\", sans-serif;\n  font-weight: 700;\n  font-size: 3rem;\n  text-align: center;\n`;\n","import { StyledTitle } from \"./Title.styles\";\n\nexport const Title = () => {\n  return <StyledTitle>TodoList</StyledTitle>;\n};\n","import styled from \"styled-components\";\n\nexport const StyledControl = styled.div`\n  display: flex;\n  margin: 10px;\n`;\n","import React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { StyledControl } from \"./Control.styles\";\n\nexport const Control = ({ todo, setTodo }) => {\n  const [value, setValue] = useState(\"\");\n\n  const saveTodo = () => {\n    if (value) {\n      setTodo(\n        //новый массив: существующий туду + таска\n        [\n          ...todo,\n          {\n            id: nanoid(),\n            content: value,\n            isActive: true, //по умолчанию туду открыто\n            date: new Date(Date.now()).toLocaleString(\"en-GB\"),\n          },\n        ]\n      );\n    }\n    setValue(\"\"); //обнуление инпута\n  };\n\n  const handleSubmit = (e) => {\n    if (e.key === \"Enter\" && value) {\n      saveTodo();\n    }\n  };\n\n  return (\n    <StyledControl>\n      <input\n        placeholder=\"input your task\"\n        value={value} //из хука\n        onChange={(e) => setValue(e.target.value)}\n        onKeyDown={(e) => handleSubmit(e)}\n      />\n      <button onClick={saveTodo}>Save</button>\n    </StyledControl>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const BigWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const TaskContainer = styled.div`\n  //таска и дата\n  min-height: 200px;\n  width: 700px;\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  align-items: center;\n  justify-content: space-evenly;\n  border: black solid;\n  border-radius: 15px;\n  box-shadow: darkslategrey;\n  background-color: ${(props) => (props.status ? \"#78dbe2\" : \"grey\")};\n`;\nexport const TasksWrapper = styled.div`\n  //таска и кнопки\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const TasksContent = styled.div`\n  //таска\n  width: 500px;\n  text-align: center;\n  word-wrap: break-word;\n  font-weight: bold;\n  font-size: 1.6rem;\n`;\n\nexport const StyledData = styled.div``;\n\nexport const ButtonsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n","import styled from \"styled-components\";\n\nexport const StyledFooter = styled.div`\n  font-family: \"Roboto\", sans-serif;\n  font-weight: 700;\n  font-size: 3rem;\n  text-align: center;\n  margin-top: 10px;\n`;\n","import React from \"react\";\nimport { StyledFooter } from \"./Footer.styles\";\n\nexport const Footer = ({ amount }) => {\n  return <StyledFooter>Tasks amount: {amount}</StyledFooter>;\n};\n","import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport {\n  TaskContainer,\n  TasksContent,\n  BigWrapper,\n  ButtonsWrapper,\n  TasksWrapper,\n  StyledData,\n} from \"./List.styles\";\nimport { Footer } from \"../Footer/Footer\";\n\nexport const List = ({ todo, setTodo }) => {\n  const [edit, setEdit] = useState(null);\n  const [value, setValue] = useState(\"\"); //для редактирования\n  const [filter, setFilter] = useState(todo); //массив для фильтрации в котором по умолчанию лежат все таски\n\n  const handleSubmit = (e, id) => {\n    if (e.key === \"Enter\" && value) {\n      saveEditedTodo(id);\n    }\n  };\n\n  useEffect(() => {\n    //при каждом изменении массива туду при фильтрации рендерим страницу\n    setFilter(todo);\n  }, [todo]); //только при изменении\n\n  const filterTodo = (isActive) => {\n    if (isActive === \"all\") {\n      setFilter(todo);\n    } else {\n      const newTodo = [...todo].filter((item) => item.isActive === isActive); //фильтруем массив всех тасок по полученному статусу\n      setFilter(newTodo);\n    }\n  };\n\n  const deleteTodo = (id) => {\n    const newTodo = [...todo].filter((item) => item.id !== id); //создаем массив-копию без выбранного элемента (перебираемый ид не равен ид от кнопки)\n    setTodo(newTodo); //передаем массив без удаленного туду в стейт\n  };\n\n  const statusTodo = (id) => {\n    const newTodo = [...todo].filter((item) => {\n      //фильтруем туду, ищем элемент с таким же айди и меняем статус\n      if (item.id === id) {\n        item.isActive = !item.isActive;\n      }\n      return item; //сворачиваем цикл если элемент нашелся\n    });\n    setTodo(newTodo); //обновляем стейт\n  };\n\n  const editTodo = (id, content) => {\n    setEdit(id);\n    setValue(content); //при редактировании контент в вэлью\n  };\n\n  const saveEditedTodo = (id) => {\n    const newTodo = [...todo].map((item) => {\n      if (item.id === id) {\n        item.content = value;\n      }\n      return item; //выход из цикла\n    });\n    setTodo(newTodo); //обновляем стейт\n    setEdit(null); //выход из редактирования\n  };\n  return (\n    <BigWrapper>\n      <ButtonsWrapper>\n        <button onClick={() => filterTodo(\"all\")}>all</button>\n        <button onClick={() => filterTodo(true)}>open</button>\n        <button onClick={() => filterTodo(false)}>closed</button>\n      </ButtonsWrapper>\n      {filter.map(\n        (\n          item //каждый элемент массива туду в переменной item\n        ) => (\n          <TasksWrapper key={item.id}>\n            {edit === item.id ? ( //редактирование активно? (айди при клике на edit)\n              <TaskContainer status={item.isActive}>\n                <input\n                  value={value}\n                  onChange={(e) => setValue(e.target.value)}\n                  onKeyDown={(e) => handleSubmit(e, item.id)}\n                />\n              </TaskContainer>\n            ) : (\n              <TaskContainer status={item.isActive}>\n                <TasksContent>{item.content}</TasksContent>\n                <StyledData>Created on {item.date}</StyledData>\n              </TaskContainer>\n            )}\n            {\n              //сокрытие кнопок в режиме редактирования\n              edit === item.id ? (\n                <button onClick={() => saveEditedTodo(item.id)}>\n                  Save edit\n                </button>\n              ) : (\n                <ButtonsWrapper>\n                  <button onClick={() => deleteTodo(item.id)}>Delete</button>\n                  <button onClick={() => editTodo(item.id, item.content)}>\n                    Edit\n                  </button>\n                  <button onClick={() => statusTodo(item.id)}>Status</button>\n                </ButtonsWrapper>\n              )\n            }\n          </TasksWrapper>\n        )\n      )}\n      <Footer amount={filter.length} />\n    </BigWrapper>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Title } from \"./components/Title/Title\";\nimport { Control } from \"./components/Control/Control\";\nimport { List } from \"./components/List/List\";\n\nfunction App() {\n  const [todo, setTodo] = useState([\n    {\n      id: 1,\n      content: \"тест1\",\n      isActive: false,\n      date: \"21/10/2021, 00:00:00\",\n    },\n    {\n      id: 2,\n      content: \"тест2\",\n      isActive: true,\n      date: \"21/10/2021, 00:00:00\",\n    },\n    {\n      id: 3,\n      content: \"тест3\",\n      isActive: true,\n      date: \"21/10/2021, 00:00:00\",\n    },\n  ]);\n\n  return (\n    <div className=\"App\">\n      <Title />\n      <Control todo={todo} setTodo={setTodo} />\n      <List todo={todo} setTodo={setTodo} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}